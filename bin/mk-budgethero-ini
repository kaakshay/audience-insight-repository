#!/usr/bin/env perl
#
# NOTE this should not ship with OpenAIR 2.2.

use strict;
use warnings;
use Data::Dump qw( dump );
use FindBin;
use lib "$FindBin::Bin/../lib/perl";
use Carp;
use Getopt::Long;

use AIR2::Organization;

my $TMPL = <<EOF;
; DO NOT EDIT THIS FILE DIRECTLY.
; Instead, run 'make budgethero'
; -----------------------------------------------------------------------
; map domains to orgs
; 1) The first item where the dom_regex matches will be used.
; 2) The source will be opted-in to each org listed.  New sources will get
;    a home-org of whichever is listed first
; 3) The 'disp_name' is used in naming the tank/import.

[marketplace]
dom_regex = refid=MKP
org_names = marketplace,global
disp_name = Marketplace

[opb]
dom_regex = refid=OPB
org_names = opb,global
disp_name = OPB

[kuow]
dom_regex = refid=KUOW
org_names = kuow,global
disp_name = KUOW

[nhpr]
dom_regex = refid=NHPR
org_names = nhpr,global
disp_name = NHPR

[wamu]
dom_regex = refid=WAMU
org_names = wamu,global
disp_name = WAMU

<<ORGS>>

; default... this should be listed last
[default]
dom_regex = .*
org_names = apmpin,global
disp_name = APMPIN

EOF

my %legacy_refs = map { $_ => 1 } qw( marketplace opb kuow nhpr wamu );

my $orgs = AIR2::Organization->fetch_all( sort_by => 'org_name' );

my $buf = '';
for my $org (@$orgs) {
    next if exists $legacy_refs{ $org->org_name };
    next unless $org->is_active();
    $buf .= sprintf(
        "\n[%s]\ndom_regex = refid=%s\norg_names = %s,global\ndisp_name = %s\n",
        $org->org_name, $org->org_name,
        $org->org_name, $org->org_display_name
    );
}

( my $out = $TMPL ) =~ s/<<ORGS>>/$buf/;

print $out;

