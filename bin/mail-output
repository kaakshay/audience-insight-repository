#!/usr/bin/env perl                                                                                                               
###########################################################################
#
#   Copyright 2010 American Public Media Group
#
#   This file is part of AIR2.
#
#   AIR2 is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   AIR2 is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with AIR2.  If not, see <http://www.gnu.org/licenses/>.
#
###########################################################################

use strict;
use warnings;
use Data::Dump qw( dump );
use Email::Stuff;
use Getopt::Long;
use Pod::Usage;
use FindBin;
use lib "$FindBin::Bin/../lib/perl";
use AIR2::Config;

my ( $help, $debug, $to, $subject, $attachment );
GetOptions(
    'to=s'         => \$to,
    'help'         => \$help,
    'debug'        => \$debug,
    'subject=s'    => \$subject,
    'attachment=s' => \$attachment,
) or pod2usage(2);

# show help
if ($help) {
    pod2usage(2);
}

if ( !$to or !$subject or !$attachment ) {
    pod2usage(2);
}

my $cmd = join( ' ', @ARGV );

my $buf = '';
open( CMD, "$cmd |" ) or die "can't fork $cmd: $!";
while (<CMD>) {
    $buf .= $_;
}
close(CMD);

send_email(
    to      => $to,
    from    => 'pijdev@mpr.org',
    subject => $subject,
    text    => "See attached report $attachment",
    attach  => [ $buf, filename => $attachment ]
);

sub send_email {
    my %args = @_;
    if ($debug) {
        dump \%args;
    }
    my $stuff = Email::Stuff->to( $args{to} )->from( $args{from} )
        ->subject( $args{subject} );
    if ( $args{text} ) {
        $stuff->text_body( $args{text} );
    }
    if ( $args{html} ) {
        $stuff->html_body( $args{html} );
    }
    if ( $args{attach} ) {
        $stuff->attach( @{ $args{attach} } );
    }
    my %mailer_args = ( Host => AIR2::Config->get_smtp_host, );
    if ( AIR2::Config->smtp_host_requires_auth ) {
        $mailer_args{username} = AIR2::Config->get_smtp_username;
        $mailer_args{password} = AIR2::Config->get_smtp_password;
    }
    my $smtp = Email::Send->new(
        {   mailer      => 'SMTP',
            mailer_args => [ %mailer_args, ]
        }
    ) or die "failed to create Email::Send::SMTP: $@ $!\n";
    my $result = $stuff->using($smtp)->send();

    $debug and warn $result;

    return $result;
}

__END__

=pod

=head1 NAME

mail-output - sent command output via email

=head1 SYNOPSIS

 mail-output --to you@foo --subject 'my report' --attachment 'important.txt' \
      -- command --option

=cut
