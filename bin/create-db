#!/usr/bin/env php
<?php
/**************************************************************************
 *
 *   Copyright 2010 American Public Media Group
 *
 *   This file is part of AIR2.
 *
 *   AIR2 is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   AIR2 is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with AIR2.  If not, see <http://www.gnu.org/licenses/>.
 *
 *************************************************************************/

require_once realpath(dirname(__FILE__).'/../app/init.php');
require_once 'AIR2_DBManager.php';

/*
 * Creates the AIR database!
 *
 * If unable to create, or the database already exists (and is non-empty),
 * an error will be logged.
 */
try {
    AIR2_DBManager::init();
}
catch (Doctrine_Connection_Exception $e) {
    $msg = ' > Unable to connect to database using profile ' . AIR2_PROFILE;
    $msg .= ' - check your database settings in etc/profiles.ini';
    error_log($msg);
    exit(1);
}

// get connection
$conn = AIR2_DBManager::get_master_connection();
$master = AIR2_DBManager::$master;
$system = $master['hostname'].'::'.$master['dbname'];

// check for tables
$rs = $conn->fetchAll('show tables', array(), 0);
if (count($rs) > 0) {
    $msg = " > Found existing tables in $system for profile " . AIR2_PROFILE;
    $msg .= ' - run "make db-drop" first';
    error_log($msg);
    exit(2);
}

// get a list of models (init.php loads the app/models directory)
$models = Doctrine_Core::getLoadedModels();

// turn off key checks while we do this, since models could be
// loaded in any order
$conn->execute('SET FOREIGN_KEY_CHECKS = 0');

// helper to create a complex constraint
function mk_constraint($table, $fkey, $ref_table, $ref_key) {
    global $conn;
    $conn->exec("ALTER TABLE $table ADD CONSTRAINT {$table}_{$fkey}_{$ref_table}_{$ref_key}"
        . " FOREIGN KEY ($fkey) REFERENCES `$ref_table`($ref_key) ON DELETE CASCADE");
}

// export each to database
foreach ($models as $m) {
    $doc_tbl = Doctrine::getTable($m);

    // For some reason, mysql has a poorly-documented issue with the
    // deprecated keyword "bin".  So doctrine will throw an exception when
    // attempting to create constraints to that table.  We'll just catch them
    // here, and manually create the constraints (with backticks).
    try {
        $doc_tbl->export();
    }
    catch (Doctrine_Connection_Mysql_Exception $e) {
        if ($m == 'BinSource' && preg_match("/bin_source_bsrc_bin_id_bin_bin_id/", "$e")) {
            mk_constraint('bin_source', 'bsrc_bin_id', 'bin', 'bin_id');
            mk_constraint('bin_source', 'bsrc_src_id', 'source', 'src_id');
        }
        elseif ($m == 'BinSrcResponseSet' && preg_match("/bin_src_response_set_bsrs_bin_id_bin_bin_id/", "$e")) {
            mk_constraint('bin_src_response_set', 'bsrs_bin_id', 'bin', 'bin_id');
            mk_constraint('bin_src_response_set', 'bsrs_srs_id', 'src_response_set', 'srs_id');
            mk_constraint('bin_src_response_set', 'bsrs_inq_id', 'inquiry', 'inq_id');
            mk_constraint('bin_src_response_set', 'bsrs_src_id', 'source', 'src_id');
        }
        else {
            $msg = " > Error creating model $m for profile " . AIR2_PROFILE;
            $msg .= " - " . $e->getMessage();
            error_log($msg);
            exit(3);
        }
    }
}

// re-enable key checks
$conn->execute('SET FOREIGN_KEY_CHECKS = 1');
